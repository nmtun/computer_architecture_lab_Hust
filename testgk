.data
    prompt_M: .asciiz "Nhap so nguyen duong M: "
    prompt_N: .asciiz "Nhap so nguyen duong N: "
    lcm_msg: .asciiz "Boi so chung nho nhat cua M va N la: "
    
.text
    # Hàm nhập số nguyên từ bàn phím
    # $a0: prompt message
    # Trả về số nguyên trong $v0
    input_integer:
        li $v0, 4               # syscall 4: in chuỗi
        syscall
        
        li $v0, 5               # syscall 5: đọc số nguyên
        syscall
        
        jr $ra                  # Trả về ra địa chỉ gọi
        
    # Hàm tính ước số chung lớn nhất (GCD)
    # $a0: số nguyên thứ nhất (M)
    # $a1: số nguyên thứ hai (N)
    # Trả về ước số chung lớn nhất trong $v0
    gcd:
        move $t0, $a0           # Lưu M vào $t0
        move $t1, $a1           # Lưu N vào $t1
        
        gcd_loop:
            beq $t1, $zero, end_gcd  # Nếu N = 0, kết thúc vòng lặp
            move $t2, $t1            # Lưu giá trị N vào $t2
            div $t0, $t1             # Tính phần dư của M chia N
            mfhi $t0                 # Lưu phần dư vào $t0
            move $t1, $t0            # Gán giá trị phần dư vào N
            move $t0, $t2            # Gán giá trị cũ của N vào M
            j gcd_loop               # Lặp lại vòng lặp
        
        end_gcd:
            move $v0, $t2   # Kết quả là giá trị ước chung lớn nhất
        
            jr $ra          # Trả về ra địa chỉ gọi

    .globl main
    main:
        # Nhập số nguyên dương M
        li $v0, 4               # syscall 4: in chuỗi
        la $a0, prompt_M       # Địa chỉ của prompt_M
        syscall
        
        jal input_integer       # Gọi hàm nhập số nguyên
        move $s0, $v0           # Lưu M vào $s0
        
        # Nhập số nguyên dương N
        li $v0, 4               # syscall 4: in chuỗi
        la $a0, prompt_N       # Địa chỉ của prompt_N
        syscall
        
        jal input_integer       # Gọi hàm nhập số nguyên
        move $s1, $v0           # Lưu N vào $s1
        
        # Gọi hàm tính ước số chung lớn nhất (GCD)
        move $a0, $s0           # Đưa M vào $a0
        move $a1, $s1           # Đưa N vào $a1
        jal gcd                 # Gọi hàm gcd
        move $t3, $v0           # Lưu kết quả vào $t3
        
        # Tính bội số chung nhỏ nhất (LCM)
        mul $t4, $s0, $s1       # Tính tích của M và N
        div $t4, $t3            # Chia tích cho ước số chung lớn nhất
        mflo $t4                # Lưu kết quả vào $t4
        
        # In kết quả
        li $v0, 4               # syscall 4: in chuỗi
        la $a0, lcm_msg         # Địa chỉ của lcm_msg
        syscall
        
        li $v0, 1               # syscall 1: in số nguyên
        move $a0, $t4           # Đưa kết quả vào $a0
        syscall
        
        # Kết thúc chương trình
        li $v0, 10              # syscall 10: thoát chương trình
        syscall
